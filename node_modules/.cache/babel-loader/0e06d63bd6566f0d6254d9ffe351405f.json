{"ast":null,"code":"var _jsxFileName = \"/Users/zen/Desktop/React-Mobx-Todo/src/Todo/index.js\",\n    _s = $RefreshSig$();\n\nimport './index.css';\nimport { useStore } from '../store/index';\nimport { observer } from 'mobx-react-lite';\nimport { useState } from 'react';\nimport { v4 as uuid } from 'react-uuid'; // ÊÄùË∑ØÔºö\n// eslint-disable-next-line no-lone-blocks\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n{\n  /*  1.‰ªé useStore() ‰∏≠Ëß£ÊûÑËµãÂÄºÂá∫ÂàóË°®ÂÆû‰æã\n      2.‰ªéËß£ÊûÑÂá∫Êù•ÁöÑÂÆû‰æã‰∏≠ÂèñÊï∞ÊçÆÔºåÊù•Ê∏≤Êüì todo ÂàóË°®\n         2-1.Âú® store ÂÜÖÂÆö‰πâÂà§Êñ≠Êù°‰ª∂Ë∑üËÆ°ÁÆóÊñπÊ≥ïÔºàÊï∞ÊçÆÂ±ÇÔºâ\n         2-2.Âú® html ÂÜÖÂÆö‰πâÁÇπÂáª‰∫ã‰ª∂Ë∑üÁÇπÂáª‰∫ã‰ª∂ÁöÑÊñπÊ≥ïÁÑ∂ÂêéÁªô store Âéª‰º†ÂèÇÔºàËßÜÂõæÂ±ÇÔºâ\n      3.ÂÆûÁé∞ÈÄâ‰∏≠ checkbox ÂäüËÉΩ(ÂçïÈÄâ/ÂÖ®ÈÄâ)\n         3-1.Âú® store ÂÜÖÂÆö‰πâÂà§Êñ≠Êù°‰ª∂Ë∑üËÆ°ÁÆóÊñπÊ≥ïÔºàÊï∞ÊçÆÂ±ÇÔºâ\n         3-2.Âú® html ÂÜÖÂÆö‰πâÁÇπÂáª‰∫ã‰ª∂Ë∑üÁÇπÂáª‰∫ã‰ª∂ÁöÑÊñπÊ≥ïÁÑ∂ÂêéÁªô store Âéª‰º†ÂèÇÔºàËßÜÂõæÂ±ÇÔºâ\n      4.ÂÆûÁé∞Âà†Èô§ÂäüËÉΩ\n         4-1.Âú® store ÂÜÖÂÆö‰πâÂà§Êñ≠Êù°‰ª∂Ë∑üËÆ°ÁÆóÊñπÊ≥ïÔºàÊï∞ÊçÆÂ±ÇÔºâ\n         4-2.Âú® html ÂÜÖÂÆö‰πâÁÇπÂáª‰∫ã‰ª∂Ë∑üÁÇπÂáª‰∫ã‰ª∂ÁöÑÊñπÊ≥ïÁÑ∂ÂêéÁªô store Âéª‰º†ÂèÇÔºàËßÜÂõæÂ±ÇÔºâ\n      5.ÂÆûÁé∞ÂõûËΩ¶Êñ∞Â¢ûÂäüËÉΩ\n      6.ÁªüËÆ°Êï∞ÈáèÂäüËÉΩ\n  */\n}\n\nfunction Task() {\n  _s();\n\n  //üî•üî•‰ªé useStore Ë∑üÂÆû‰æã‰∏≠„ÄêËß£ÊûÑËµãÂÄº„ÄëÂèñÂá∫ taskStore Ëøô‰∏™Â≠êÂÆû‰æãÔºÅ\n  const {\n    taskStore\n  } = useStore(); //üëáüëáüëáËßÜÂõæÂ±ÇÊñπÊ≥ï(‰º†ÂèÇÊï∞Áªô storeÔºåÂú® store ÈÇ£ÈáåÂéªÂ§ÑÁêÜÊï∞ÊçÆ)\n  //üî•üî•ÂÆö‰πâcheckbox ÁöÑÊñπÊ≥ïÔºåÊ≥®ÊÑèÔºå‰∏çÊòØÂú®ËøôÈáåÁõ¥Êé•ÊîπÊï∞ÊçÆÔºåËÄåÊòØ‰º†Áªô mobx =>  ÊÄùË∑ØÔºömobx Store ÂéªÁª¥Êä§Áä∂ÊÄÅÔºåinput checkbox Âè™ÈúÄË¶ÅÊää e.target.value ËµãÂÄºÁªô store ÂÜÖÁöÑÊñπÊ≥ïÂç≥ÂèØÔºÅ\n  //üî•üî•Ê≥®ÊÑèÔºåÂõ†‰∏∫Ë¶Å‰º†‰∏§‰∏™ÂèÇÊï∞Ôºå‰º†‰∏ç‰∫ÜÊâÄ‰ª•‰∏ãÈù¢ÁöÑ input ÈÇ£ÈáåÊç¢Êàê ()=>XX() ÁÆ≠Â§¥ÂáΩÊï∞ÁöÑÂÜôÊ≥ïÔºåÂÖà‰º†‰∏Ä‰∏™ÂèÇÊï∞ÔºåËøôÈáåÂÜç‰º†Â§ö‰∏Ä‰∏™ÔºÅÔºÅÔºÅ\n\n  function onChange(id, e) {\n    taskStore.changeCheckbox(id, e.target.checked); //üî•üî•üî•üî•üî•ÊääÁÇπÂáªÂà∞ÁöÑ list ÁöÑ id Ë∑ü checked Áä∂ÊÄÅÈÉΩ‰º†ËøõÂéªÔºÅÔºÅ\n    //ËÆ®Â∑ß‰∫ÜÔºÅÔºÅüî•üî•Âõ†‰∏∫ÂéüÁîüÁ≥ªÁªüÂÆö‰πâÁöÑ checked = true ÊòØÊú™ÊâìÂãæÁä∂ÊÄÅüî•üî•ÔºåËÄåÊàë‰ª¨ÁöÑ isDone:false ÊòØÊú™ÊâìÂãæÔºåÊâÄ‰ª•Áõ¥Êé•Áõ∏Á≠âÂ∞±ÂèØ‰ª•‰∫ÜÔºå‰∏çÁî®ÁâπÂú∞ÂèñËøîÔºÅÔºÅ\n\n    console.log(e.target.checked);\n  } //üî•üî•ÂÆö‰πâÂÖ®ÈÄâÊñπÊ≥ïÔºÅÔºàËßÜÂõæÂ±ÇÔºâ\n\n\n  function allChangeFn(e) {\n    taskStore.allCheck(e.target.checked);\n  } //üî•üî•ÂÆö‰πâÂà†Èô§ÊñπÊ≥ïÔºàËßÜÂõæÂ±ÇÔºâ\n\n\n  function delTask(id) {\n    taskStore.deleteTask(id); //Êää item ÂÜÖÁöÑ id ‰º†ËøõÂéª, Áªô store ÂÜÖÂ§ÑÁêÜ\n  } //üî•üî•ÂÆö‰πâ„ÄêÂ≠òÂÇ®ËæìÂÖ•Ê°ÜÂÜÖÂÆπÁöÑÊï∞ÁªÑ„ÄëÔºàÂà©Áî® hook ÊñπÊ≥ïÔºâ + „ÄêÊñ∞Â¢û„ÄëÁöÑÊñπÊ≥ï ÔºàËßÜÂõæÂ±ÇÔºâ\n\n\n  const [inputValue, setInputValue] = useState(); //‚ö°Ô∏èReact ÂèóÊéßÁªÑ‰ª∂ÁöÑÂ∏∏ËßÑÂÜôÊ≥ïÔºàÂÆö‰πâ„ÄÅÁªëÊï∞ÊçÆ„ÄÅÊõ¥Êñ∞Êï∞ÊçÆÔºâ\n\n  function addTask() {\n    taskStore.addTask( //‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‰º†ÂÖ•ÂêåÊ†∑Êï∞ÊçÆÊ†ºÂºèÁöÑÂèÇÊï∞!!!\n    {\n      id: 1,\n      name: 'Â≠¶‰π†react',\n      isDone: false\n    });\n  } //‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"todoapp\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"new-todo\",\n        autoFocus: true,\n        autoComplete: \"off\",\n        placeholder: \"What needs to be done?\",\n        value: inputValue //‚ö°Ô∏èÂèóÊéßÁªÑ‰ª∂ÁªëÊï∞ÊçÆ\n        ,\n        onChange: e => setInputValue(e.target.value) //ÊääÊúÄÊñ∞ÁöÑÊï∞ÊçÆÊîæÂõûÂà∞ inputValue ÂÜÖ  //‚ö°Ô∏èÂèóÊéßÁªÑ‰ª∂Êõ¥Êñ∞Êï∞ÊçÆ\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"toggle-all\",\n        className: \"toggle-all\",\n        type: \"checkbox\",\n        checked: taskStore.isAll,\n        onChange: allChangeFn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"toggle-all\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"todo-list\",\n        children: taskStore.list.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: item.isDone ? 'todo completed' : 'todo',\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"view\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"toggle\",\n              type: \"checkbox\",\n              onChange: e => onChange(item.id, e),\n              checked: item.isDone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\" \", item.name, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"destroy\",\n              onClick: () => delTask(item.id),\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n} //üî•üî•ÂæàÂÖ≥ÈîÆÔºåÊï∞ÊçÆÂèòÂåñÂêéË¶ÅÂΩ±ÂìçËßÜÂõæÂèòÂåñÁöÑËØùÔºåÂæóÂåÖË£π‰∏Ä‰∏ã, ÊâçÊòØÂìçÂ∫îÂºèÊï∞ÊçÆ\n\n\n_s(Task, \"d/2S9iJDRkvSMb8gqRo2/WtMpEQ=\", false, function () {\n  return [useStore];\n});\n\n_c = Task;\nexport default _c2 = observer(Task);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Task\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/zen/Desktop/React-Mobx-Todo/src/Todo/index.js"],"names":["useStore","observer","useState","v4","uuid","Task","taskStore","onChange","id","e","changeCheckbox","target","checked","console","log","allChangeFn","allCheck","delTask","deleteTask","inputValue","setInputValue","addTask","name","isDone","value","isAll","list","map","item"],"mappings":"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","sourcesContent":["import './index.css'\nimport { useStore } from '../store/index'\nimport { observer } from 'mobx-react-lite'\nimport { useState } from 'react'\nimport { v4 as uuid } from 'react-uuid'\n\n\n\n// ÊÄùË∑ØÔºö\n// eslint-disable-next-line no-lone-blocks\n{/*  1.‰ªé useStore() ‰∏≠Ëß£ÊûÑËµãÂÄºÂá∫ÂàóË°®ÂÆû‰æã\n     2.‰ªéËß£ÊûÑÂá∫Êù•ÁöÑÂÆû‰æã‰∏≠ÂèñÊï∞ÊçÆÔºåÊù•Ê∏≤Êüì todo ÂàóË°®\n        2-1.Âú® store ÂÜÖÂÆö‰πâÂà§Êñ≠Êù°‰ª∂Ë∑üËÆ°ÁÆóÊñπÊ≥ïÔºàÊï∞ÊçÆÂ±ÇÔºâ\n        2-2.Âú® html ÂÜÖÂÆö‰πâÁÇπÂáª‰∫ã‰ª∂Ë∑üÁÇπÂáª‰∫ã‰ª∂ÁöÑÊñπÊ≥ïÁÑ∂ÂêéÁªô store Âéª‰º†ÂèÇÔºàËßÜÂõæÂ±ÇÔºâ\n     3.ÂÆûÁé∞ÈÄâ‰∏≠ checkbox ÂäüËÉΩ(ÂçïÈÄâ/ÂÖ®ÈÄâ)\n        3-1.Âú® store ÂÜÖÂÆö‰πâÂà§Êñ≠Êù°‰ª∂Ë∑üËÆ°ÁÆóÊñπÊ≥ïÔºàÊï∞ÊçÆÂ±ÇÔºâ\n        3-2.Âú® html ÂÜÖÂÆö‰πâÁÇπÂáª‰∫ã‰ª∂Ë∑üÁÇπÂáª‰∫ã‰ª∂ÁöÑÊñπÊ≥ïÁÑ∂ÂêéÁªô store Âéª‰º†ÂèÇÔºàËßÜÂõæÂ±ÇÔºâ\n     4.ÂÆûÁé∞Âà†Èô§ÂäüËÉΩ\n        4-1.Âú® store ÂÜÖÂÆö‰πâÂà§Êñ≠Êù°‰ª∂Ë∑üËÆ°ÁÆóÊñπÊ≥ïÔºàÊï∞ÊçÆÂ±ÇÔºâ\n        4-2.Âú® html ÂÜÖÂÆö‰πâÁÇπÂáª‰∫ã‰ª∂Ë∑üÁÇπÂáª‰∫ã‰ª∂ÁöÑÊñπÊ≥ïÁÑ∂ÂêéÁªô store Âéª‰º†ÂèÇÔºàËßÜÂõæÂ±ÇÔºâ\n     5.ÂÆûÁé∞ÂõûËΩ¶Êñ∞Â¢ûÂäüËÉΩ\n     6.ÁªüËÆ°Êï∞ÈáèÂäüËÉΩ\n*/}\n\n\n\nfunction Task() {\n\n  //üî•üî•‰ªé useStore Ë∑üÂÆû‰æã‰∏≠„ÄêËß£ÊûÑËµãÂÄº„ÄëÂèñÂá∫ taskStore Ëøô‰∏™Â≠êÂÆû‰æãÔºÅ\n  const { taskStore } = useStore()\n  \n\n  //üëáüëáüëáËßÜÂõæÂ±ÇÊñπÊ≥ï(‰º†ÂèÇÊï∞Áªô storeÔºåÂú® store ÈÇ£ÈáåÂéªÂ§ÑÁêÜÊï∞ÊçÆ)\n  //üî•üî•ÂÆö‰πâcheckbox ÁöÑÊñπÊ≥ïÔºåÊ≥®ÊÑèÔºå‰∏çÊòØÂú®ËøôÈáåÁõ¥Êé•ÊîπÊï∞ÊçÆÔºåËÄåÊòØ‰º†Áªô mobx =>  ÊÄùË∑ØÔºömobx Store ÂéªÁª¥Êä§Áä∂ÊÄÅÔºåinput checkbox Âè™ÈúÄË¶ÅÊää e.target.value ËµãÂÄºÁªô store ÂÜÖÁöÑÊñπÊ≥ïÂç≥ÂèØÔºÅ\n  //üî•üî•Ê≥®ÊÑèÔºåÂõ†‰∏∫Ë¶Å‰º†‰∏§‰∏™ÂèÇÊï∞Ôºå‰º†‰∏ç‰∫ÜÊâÄ‰ª•‰∏ãÈù¢ÁöÑ input ÈÇ£ÈáåÊç¢Êàê ()=>XX() ÁÆ≠Â§¥ÂáΩÊï∞ÁöÑÂÜôÊ≥ïÔºåÂÖà‰º†‰∏Ä‰∏™ÂèÇÊï∞ÔºåËøôÈáåÂÜç‰º†Â§ö‰∏Ä‰∏™ÔºÅÔºÅÔºÅ\n  function onChange (id,e) {\n    taskStore.changeCheckbox(id, e.target.checked)//üî•üî•üî•üî•üî•ÊääÁÇπÂáªÂà∞ÁöÑ list ÁöÑ id Ë∑ü checked Áä∂ÊÄÅÈÉΩ‰º†ËøõÂéªÔºÅÔºÅ\n    //ËÆ®Â∑ß‰∫ÜÔºÅÔºÅüî•üî•Âõ†‰∏∫ÂéüÁîüÁ≥ªÁªüÂÆö‰πâÁöÑ checked = true ÊòØÊú™ÊâìÂãæÁä∂ÊÄÅüî•üî•ÔºåËÄåÊàë‰ª¨ÁöÑ isDone:false ÊòØÊú™ÊâìÂãæÔºåÊâÄ‰ª•Áõ¥Êé•Áõ∏Á≠âÂ∞±ÂèØ‰ª•‰∫ÜÔºå‰∏çÁî®ÁâπÂú∞ÂèñËøîÔºÅÔºÅ\n    console.log(e.target.checked)\n  }\n\n\n  //üî•üî•ÂÆö‰πâÂÖ®ÈÄâÊñπÊ≥ïÔºÅÔºàËßÜÂõæÂ±ÇÔºâ\n  function allChangeFn (e) {\n    taskStore.allCheck(e.target.checked)\n  }\n\n\n\n  //üî•üî•ÂÆö‰πâÂà†Èô§ÊñπÊ≥ïÔºàËßÜÂõæÂ±ÇÔºâ\n  function delTask(id) {\n    taskStore.deleteTask(id) //Êää item ÂÜÖÁöÑ id ‰º†ËøõÂéª, Áªô store ÂÜÖÂ§ÑÁêÜ\n  }\n\n\n\n  //üî•üî•ÂÆö‰πâ„ÄêÂ≠òÂÇ®ËæìÂÖ•Ê°ÜÂÜÖÂÆπÁöÑÊï∞ÁªÑ„ÄëÔºàÂà©Áî® hook ÊñπÊ≥ïÔºâ + „ÄêÊñ∞Â¢û„ÄëÁöÑÊñπÊ≥ï ÔºàËßÜÂõæÂ±ÇÔºâ\n  const [inputValue,setInputValue] = useState() //‚ö°Ô∏èReact ÂèóÊéßÁªÑ‰ª∂ÁöÑÂ∏∏ËßÑÂÜôÊ≥ïÔºàÂÆö‰πâ„ÄÅÁªëÊï∞ÊçÆ„ÄÅÊõ¥Êñ∞Êï∞ÊçÆÔºâ\n  function addTask () {\n    taskStore.addTask( //‚ö°Ô∏è‚ö°Ô∏è‚ö°Ô∏è‰º†ÂÖ•ÂêåÊ†∑Êï∞ÊçÆÊ†ºÂºèÁöÑÂèÇÊï∞!!!\n      {\n        id:1,\n        name: 'Â≠¶‰π†react',\n        isDone: false\n      }\n    )\n  }\n\n\n  //‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n\n\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>Todos</h1>\n\n        {/* üåüÊñ∞Â¢û todo ÁöÑËæìÂÖ•Ê°Ü, Âõ†‰∏∫ËæìÂÖ•ÁöÑÁä∂ÊÄÅÊòØ‰∏¥Êó∂ÁöÑÔºåÊâÄ‰ª•Ë¶ÅÈÄöËøáÂèóÊéßÁªÑ‰ª∂ÊãøÂà∞Ëøô‰∏™ËæìÂÖ•ÁöÑÊï∞ÊçÆ */}\n        <input \n          className=\"new-todo\" \n          autoFocus autoComplete=\"off\" \n          placeholder=\"What needs to be done?\"\n          value={inputValue} //‚ö°Ô∏èÂèóÊéßÁªÑ‰ª∂ÁªëÊï∞ÊçÆ\n          onChange={  (e)=>setInputValue(e.target.value)  }//ÊääÊúÄÊñ∞ÁöÑÊï∞ÊçÆÊîæÂõûÂà∞ inputValue ÂÜÖ  //‚ö°Ô∏èÂèóÊéßÁªÑ‰ª∂Êõ¥Êñ∞Êï∞ÊçÆ\n          />\n\n      </header>\n\n\n      <section className=\"main\">\n\n        {/* üåüÂÖ®ÈÄâÊ°Ü */}\n        <input id=\"toggle-all\" className=\"toggle-all\" type=\"checkbox\" checked={taskStore.isAll}  onChange={allChangeFn}/>\n        \n        <label htmlFor=\"toggle-all\"></label>\n\n\n        <ul className=\"todo-list\">\n          {/*  2.‰ªéËß£ÊûÑÂá∫Êù•ÁöÑÂÆû‰æã‰∏≠ÂèñÊï∞ÊçÆÔºåÊù•Ê∏≤Êüì todo ÂàóË°®Ôºåcompleted ‰∏∫ÈÄâ‰∏≠ÊÄÅ */}\n          {taskStore.list.map(item=>(\n                <li className={item.isDone ? 'todo completed' : 'todo'}  key={item.id} >\n                    <div className=\"view\">\n\n                      {/* üëáÂèóÊéßË°®Âçï,Âú® onChange ‰∫ã‰ª∂ÂÜÖÊääÊï∞ÊçÆÁöÑÊõ¥Êîπ‰∫§ÂõûÁªô taskStore, üî•üî•üî•üî•Ê≥®ÊÑèÔºåÂõ†‰∏∫Âè™Êúâ e ‰∏Ä‰∏™ÂèÇÊï∞‰∏çÂ§ü‰∫ÜÔºåÊâÄ‰ª•üëáÈúÄË¶ÅÊîπÈÄ†ÊàêÁÆ≠Â§¥ÂáΩÊï∞ÔºÅÔºÅüëáfalse Ê≤°ÊâìÂãæÔºåtrue ÊâìÂãæ*/}\n                      <input className=\"toggle\"  type=\"checkbox\"    onChange={(e)=>onChange(item.id, e)}   checked={item.isDone}  />\n                      \n                      <label > {item.name} </label>\n\n                      <button className=\"destroy\"  onClick={()=>delTask(item.id)}> </button>\n                    </div>\n                </li>\n          ))}\n\n\n          {/* üî•üî•üî•ÊÄùË∑ØÔºöÂÖàÂÜôÂá∫ html Ê®°ÊùøËß£ÊûÑÔºÅ  ÁÑ∂ÂêéÊîæËøõ map(XXX) ÊñπÊ≥ïÂÜÖüëÜÔºåÁÑ∂ÂêéÂÜçÂä†üî•„Äê key„ÄÅid„ÄÅname ÂÜÖÂÆπ„ÄÅisDone „Äëüî•Á≠âÊï∞ÊçÆÔºÅ             \n                  <li  className=\"todo completed\"> //üëàÊ∏≤ÊüìÂêéÊç¢Êàê‰∏âÂÖÉËøêÁÆóÁ¨¶Êù•Âà§Êñ≠ÊòØ‰∏çÊòØÈÄâ‰∏≠ÊÄÅÔºÅ\n                    <div className=\"view\">\n                      <input className=\"toggle\" type=\"checkbox\" defaultChecked={true}/>\n                      <label >learn react</label>\n                      <button className=\"destroy\"></button>\n                    </div>\n                </li> \n          */}\n        </ul>\n\n      </section>\n    </section>\n  )\n}\n\n\n//üî•üî•ÂæàÂÖ≥ÈîÆÔºåÊï∞ÊçÆÂèòÂåñÂêéË¶ÅÂΩ±ÂìçËßÜÂõæÂèòÂåñÁöÑËØùÔºåÂæóÂåÖË£π‰∏Ä‰∏ã, ÊâçÊòØÂìçÂ∫îÂºèÊï∞ÊçÆ\nexport default observer(Task)"]},"metadata":{},"sourceType":"module"}